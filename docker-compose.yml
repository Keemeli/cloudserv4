version: '3.8'

services:
  # Redis for coordination
  redis:
    image: redis:7-alpine
    container_name: eemeli-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eemeli-network

  # Flask Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: eemeli-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=5000
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/api/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - eemeli-network

  # React Frontend + Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eemeli-frontend
    ports:
      - "3000:8080"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - eemeli-network

volumes:
  redis_data:

networks:
  eemeli-network:
    driver: bridge
